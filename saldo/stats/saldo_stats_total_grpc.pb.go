// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v6.32.0
// source: saldo/stats/saldo_stats_total.proto

package stats

import (
	context "context"
	saldo "github.com/MamangRust/monolith-graphql-payment-gateway-pb/saldo"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	SaldoStatsTotalBalance_FindMonthlyTotalSaldoBalance_FullMethodName = "/pb.saldo.stats.SaldoStatsTotalBalance/FindMonthlyTotalSaldoBalance"
	SaldoStatsTotalBalance_FindYearTotalSaldoBalance_FullMethodName    = "/pb.saldo.stats.SaldoStatsTotalBalance/FindYearTotalSaldoBalance"
)

// SaldoStatsTotalBalanceClient is the client API for SaldoStatsTotalBalance service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SaldoStatsTotalBalanceClient interface {
	FindMonthlyTotalSaldoBalance(ctx context.Context, in *saldo.FindMonthlySaldoTotalBalance, opts ...grpc.CallOption) (*ApiResponseMonthTotalSaldo, error)
	FindYearTotalSaldoBalance(ctx context.Context, in *saldo.FindYearlySaldo, opts ...grpc.CallOption) (*ApiResponseYearTotalSaldo, error)
}

type saldoStatsTotalBalanceClient struct {
	cc grpc.ClientConnInterface
}

func NewSaldoStatsTotalBalanceClient(cc grpc.ClientConnInterface) SaldoStatsTotalBalanceClient {
	return &saldoStatsTotalBalanceClient{cc}
}

func (c *saldoStatsTotalBalanceClient) FindMonthlyTotalSaldoBalance(ctx context.Context, in *saldo.FindMonthlySaldoTotalBalance, opts ...grpc.CallOption) (*ApiResponseMonthTotalSaldo, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ApiResponseMonthTotalSaldo)
	err := c.cc.Invoke(ctx, SaldoStatsTotalBalance_FindMonthlyTotalSaldoBalance_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *saldoStatsTotalBalanceClient) FindYearTotalSaldoBalance(ctx context.Context, in *saldo.FindYearlySaldo, opts ...grpc.CallOption) (*ApiResponseYearTotalSaldo, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ApiResponseYearTotalSaldo)
	err := c.cc.Invoke(ctx, SaldoStatsTotalBalance_FindYearTotalSaldoBalance_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SaldoStatsTotalBalanceServer is the server API for SaldoStatsTotalBalance service.
// All implementations must embed UnimplementedSaldoStatsTotalBalanceServer
// for forward compatibility.
type SaldoStatsTotalBalanceServer interface {
	FindMonthlyTotalSaldoBalance(context.Context, *saldo.FindMonthlySaldoTotalBalance) (*ApiResponseMonthTotalSaldo, error)
	FindYearTotalSaldoBalance(context.Context, *saldo.FindYearlySaldo) (*ApiResponseYearTotalSaldo, error)
	mustEmbedUnimplementedSaldoStatsTotalBalanceServer()
}

// UnimplementedSaldoStatsTotalBalanceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedSaldoStatsTotalBalanceServer struct{}

func (UnimplementedSaldoStatsTotalBalanceServer) FindMonthlyTotalSaldoBalance(context.Context, *saldo.FindMonthlySaldoTotalBalance) (*ApiResponseMonthTotalSaldo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindMonthlyTotalSaldoBalance not implemented")
}
func (UnimplementedSaldoStatsTotalBalanceServer) FindYearTotalSaldoBalance(context.Context, *saldo.FindYearlySaldo) (*ApiResponseYearTotalSaldo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindYearTotalSaldoBalance not implemented")
}
func (UnimplementedSaldoStatsTotalBalanceServer) mustEmbedUnimplementedSaldoStatsTotalBalanceServer() {
}
func (UnimplementedSaldoStatsTotalBalanceServer) testEmbeddedByValue() {}

// UnsafeSaldoStatsTotalBalanceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SaldoStatsTotalBalanceServer will
// result in compilation errors.
type UnsafeSaldoStatsTotalBalanceServer interface {
	mustEmbedUnimplementedSaldoStatsTotalBalanceServer()
}

func RegisterSaldoStatsTotalBalanceServer(s grpc.ServiceRegistrar, srv SaldoStatsTotalBalanceServer) {
	// If the following call pancis, it indicates UnimplementedSaldoStatsTotalBalanceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&SaldoStatsTotalBalance_ServiceDesc, srv)
}

func _SaldoStatsTotalBalance_FindMonthlyTotalSaldoBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(saldo.FindMonthlySaldoTotalBalance)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SaldoStatsTotalBalanceServer).FindMonthlyTotalSaldoBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SaldoStatsTotalBalance_FindMonthlyTotalSaldoBalance_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SaldoStatsTotalBalanceServer).FindMonthlyTotalSaldoBalance(ctx, req.(*saldo.FindMonthlySaldoTotalBalance))
	}
	return interceptor(ctx, in, info, handler)
}

func _SaldoStatsTotalBalance_FindYearTotalSaldoBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(saldo.FindYearlySaldo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SaldoStatsTotalBalanceServer).FindYearTotalSaldoBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SaldoStatsTotalBalance_FindYearTotalSaldoBalance_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SaldoStatsTotalBalanceServer).FindYearTotalSaldoBalance(ctx, req.(*saldo.FindYearlySaldo))
	}
	return interceptor(ctx, in, info, handler)
}

// SaldoStatsTotalBalance_ServiceDesc is the grpc.ServiceDesc for SaldoStatsTotalBalance service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SaldoStatsTotalBalance_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "pb.saldo.stats.SaldoStatsTotalBalance",
	HandlerType: (*SaldoStatsTotalBalanceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FindMonthlyTotalSaldoBalance",
			Handler:    _SaldoStatsTotalBalance_FindMonthlyTotalSaldoBalance_Handler,
		},
		{
			MethodName: "FindYearTotalSaldoBalance",
			Handler:    _SaldoStatsTotalBalance_FindYearTotalSaldoBalance_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "saldo/stats/saldo_stats_total.proto",
}
