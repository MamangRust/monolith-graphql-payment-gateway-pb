// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v6.32.0
// source: saldo/saldo_query.proto

package saldo

import (
	context "context"
	card "github.com/MamangRust/monolith-graphql-payment-gateway-pb/card"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	SaldoQueryService_FindAllSaldo_FullMethodName     = "/pb.saldo.SaldoQueryService/FindAllSaldo"
	SaldoQueryService_FindByIdSaldo_FullMethodName    = "/pb.saldo.SaldoQueryService/FindByIdSaldo"
	SaldoQueryService_FindByCardNumber_FullMethodName = "/pb.saldo.SaldoQueryService/FindByCardNumber"
	SaldoQueryService_FindByActive_FullMethodName     = "/pb.saldo.SaldoQueryService/FindByActive"
	SaldoQueryService_FindByTrashed_FullMethodName    = "/pb.saldo.SaldoQueryService/FindByTrashed"
)

// SaldoQueryServiceClient is the client API for SaldoQueryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SaldoQueryServiceClient interface {
	FindAllSaldo(ctx context.Context, in *FindAllSaldoRequest, opts ...grpc.CallOption) (*ApiResponsePaginationSaldo, error)
	FindByIdSaldo(ctx context.Context, in *FindByIdSaldoRequest, opts ...grpc.CallOption) (*ApiResponseSaldo, error)
	FindByCardNumber(ctx context.Context, in *card.FindByCardNumberRequest, opts ...grpc.CallOption) (*ApiResponseSaldo, error)
	FindByActive(ctx context.Context, in *FindAllSaldoRequest, opts ...grpc.CallOption) (*ApiResponsePaginationSaldoDeleteAt, error)
	FindByTrashed(ctx context.Context, in *FindAllSaldoRequest, opts ...grpc.CallOption) (*ApiResponsePaginationSaldoDeleteAt, error)
}

type saldoQueryServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSaldoQueryServiceClient(cc grpc.ClientConnInterface) SaldoQueryServiceClient {
	return &saldoQueryServiceClient{cc}
}

func (c *saldoQueryServiceClient) FindAllSaldo(ctx context.Context, in *FindAllSaldoRequest, opts ...grpc.CallOption) (*ApiResponsePaginationSaldo, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ApiResponsePaginationSaldo)
	err := c.cc.Invoke(ctx, SaldoQueryService_FindAllSaldo_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *saldoQueryServiceClient) FindByIdSaldo(ctx context.Context, in *FindByIdSaldoRequest, opts ...grpc.CallOption) (*ApiResponseSaldo, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ApiResponseSaldo)
	err := c.cc.Invoke(ctx, SaldoQueryService_FindByIdSaldo_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *saldoQueryServiceClient) FindByCardNumber(ctx context.Context, in *card.FindByCardNumberRequest, opts ...grpc.CallOption) (*ApiResponseSaldo, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ApiResponseSaldo)
	err := c.cc.Invoke(ctx, SaldoQueryService_FindByCardNumber_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *saldoQueryServiceClient) FindByActive(ctx context.Context, in *FindAllSaldoRequest, opts ...grpc.CallOption) (*ApiResponsePaginationSaldoDeleteAt, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ApiResponsePaginationSaldoDeleteAt)
	err := c.cc.Invoke(ctx, SaldoQueryService_FindByActive_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *saldoQueryServiceClient) FindByTrashed(ctx context.Context, in *FindAllSaldoRequest, opts ...grpc.CallOption) (*ApiResponsePaginationSaldoDeleteAt, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ApiResponsePaginationSaldoDeleteAt)
	err := c.cc.Invoke(ctx, SaldoQueryService_FindByTrashed_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SaldoQueryServiceServer is the server API for SaldoQueryService service.
// All implementations must embed UnimplementedSaldoQueryServiceServer
// for forward compatibility.
type SaldoQueryServiceServer interface {
	FindAllSaldo(context.Context, *FindAllSaldoRequest) (*ApiResponsePaginationSaldo, error)
	FindByIdSaldo(context.Context, *FindByIdSaldoRequest) (*ApiResponseSaldo, error)
	FindByCardNumber(context.Context, *card.FindByCardNumberRequest) (*ApiResponseSaldo, error)
	FindByActive(context.Context, *FindAllSaldoRequest) (*ApiResponsePaginationSaldoDeleteAt, error)
	FindByTrashed(context.Context, *FindAllSaldoRequest) (*ApiResponsePaginationSaldoDeleteAt, error)
	mustEmbedUnimplementedSaldoQueryServiceServer()
}

// UnimplementedSaldoQueryServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedSaldoQueryServiceServer struct{}

func (UnimplementedSaldoQueryServiceServer) FindAllSaldo(context.Context, *FindAllSaldoRequest) (*ApiResponsePaginationSaldo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindAllSaldo not implemented")
}
func (UnimplementedSaldoQueryServiceServer) FindByIdSaldo(context.Context, *FindByIdSaldoRequest) (*ApiResponseSaldo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindByIdSaldo not implemented")
}
func (UnimplementedSaldoQueryServiceServer) FindByCardNumber(context.Context, *card.FindByCardNumberRequest) (*ApiResponseSaldo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindByCardNumber not implemented")
}
func (UnimplementedSaldoQueryServiceServer) FindByActive(context.Context, *FindAllSaldoRequest) (*ApiResponsePaginationSaldoDeleteAt, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindByActive not implemented")
}
func (UnimplementedSaldoQueryServiceServer) FindByTrashed(context.Context, *FindAllSaldoRequest) (*ApiResponsePaginationSaldoDeleteAt, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindByTrashed not implemented")
}
func (UnimplementedSaldoQueryServiceServer) mustEmbedUnimplementedSaldoQueryServiceServer() {}
func (UnimplementedSaldoQueryServiceServer) testEmbeddedByValue()                           {}

// UnsafeSaldoQueryServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SaldoQueryServiceServer will
// result in compilation errors.
type UnsafeSaldoQueryServiceServer interface {
	mustEmbedUnimplementedSaldoQueryServiceServer()
}

func RegisterSaldoQueryServiceServer(s grpc.ServiceRegistrar, srv SaldoQueryServiceServer) {
	// If the following call pancis, it indicates UnimplementedSaldoQueryServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&SaldoQueryService_ServiceDesc, srv)
}

func _SaldoQueryService_FindAllSaldo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindAllSaldoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SaldoQueryServiceServer).FindAllSaldo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SaldoQueryService_FindAllSaldo_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SaldoQueryServiceServer).FindAllSaldo(ctx, req.(*FindAllSaldoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SaldoQueryService_FindByIdSaldo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindByIdSaldoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SaldoQueryServiceServer).FindByIdSaldo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SaldoQueryService_FindByIdSaldo_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SaldoQueryServiceServer).FindByIdSaldo(ctx, req.(*FindByIdSaldoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SaldoQueryService_FindByCardNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(card.FindByCardNumberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SaldoQueryServiceServer).FindByCardNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SaldoQueryService_FindByCardNumber_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SaldoQueryServiceServer).FindByCardNumber(ctx, req.(*card.FindByCardNumberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SaldoQueryService_FindByActive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindAllSaldoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SaldoQueryServiceServer).FindByActive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SaldoQueryService_FindByActive_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SaldoQueryServiceServer).FindByActive(ctx, req.(*FindAllSaldoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SaldoQueryService_FindByTrashed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindAllSaldoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SaldoQueryServiceServer).FindByTrashed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SaldoQueryService_FindByTrashed_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SaldoQueryServiceServer).FindByTrashed(ctx, req.(*FindAllSaldoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// SaldoQueryService_ServiceDesc is the grpc.ServiceDesc for SaldoQueryService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SaldoQueryService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "pb.saldo.SaldoQueryService",
	HandlerType: (*SaldoQueryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FindAllSaldo",
			Handler:    _SaldoQueryService_FindAllSaldo_Handler,
		},
		{
			MethodName: "FindByIdSaldo",
			Handler:    _SaldoQueryService_FindByIdSaldo_Handler,
		},
		{
			MethodName: "FindByCardNumber",
			Handler:    _SaldoQueryService_FindByCardNumber_Handler,
		},
		{
			MethodName: "FindByActive",
			Handler:    _SaldoQueryService_FindByActive_Handler,
		},
		{
			MethodName: "FindByTrashed",
			Handler:    _SaldoQueryService_FindByTrashed_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "saldo/saldo_query.proto",
}
